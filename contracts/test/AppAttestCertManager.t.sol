// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {Test, console} from "forge-std/Test.sol";
import {AppAttestCertManager} from "../src/AppAttestCertManager.sol";

contract CounterTest is Test {
    AppAttestCertManager public certManager;

    function setUp() public {
        vm.warp(1742682107);
        certManager = new AppAttestCertManager();
    }

    function test() public {
        bytes memory intermediate_cert =
            hex"30820243308201c8a003020102021009bac5e1bc401ad9d45395bc381a0854300a06082a8648ce3d04030330523126302406035504030c1d4170706c6520417070204174746573746174696f6e20526f6f7420434131133011060355040a0c0a4170706c6520496e632e3113301106035504080c0a43616c69666f726e6961301e170d3230303331383138333935355a170d3330303331333030303030305a304f3123302106035504030c1a4170706c6520417070204174746573746174696f6e204341203131133011060355040a0c0a4170706c6520496e632e3113301106035504080c0a43616c69666f726e69613076301006072a8648ce3d020106052b8104002203620004ae5b37a0774d79b2358f40e7d1f22626f1c25fef17802deab3826a59874ff8d2ad1525789aa26604191248b63cb967069e98d363bd5e370fbfa08e329e8073a985e7746ea359a2f66f29db32af455e211658d567af9e267eb2614dc21a66ce99a366306430120603551d130101ff040830060101ff020100301f0603551d23041830168014ac91105333bdbe6841ffa70ca9e5faeae5e58aa1301d0603551d0e041604143ee35d1c0419a9c9b431f88474d6e1e15772e39b300e0603551d0f0101ff040403020106300a06082a8648ce3d0403030369003066023100bbbe888d738d0502cfbcfd666d09575035bcd6872c3f8430492629edd1f914e879991c9ae8b5aef8d3a85433f7b60d06023100ab38edd0cc81ed00a452c3ba44f993636553fecc297f2eb4df9f5ebe5a4acab6995c4b820df904386f7807bb589439b7";
        bytes memory leaf_cert =
            hex"308203953082031ca00302010202060195bfadb850300a06082a8648ce3d040302304f3123302106035504030c1a4170706c6520417070204174746573746174696f6e204341203131133011060355040a0c0a4170706c6520496e632e3113301106035504080c0a43616c69666f726e6961301e170d3235303332313231303632385a170d3235313031303135313132385a3081913149304706035504030c4031343537636263666632373562396530366164616535353139636334306436303866326633343033656130373138333765356136393136373864626362613636311a3018060355040b0c114141412043657274696669636174696f6e31133011060355040a0c0a4170706c6520496e632e3113301106035504080c0a43616c69666f726e69613059301306072a8648ce3d020106082a8648ce3d03010703420004139a8494b0dcd83a3ca856a64de63dcf1b98767b75c6aaa6d85614b2ad44224b62c9ba241d7a5e5289f9bdc62b95832eb2ddadf8fe03b5d5326f7494d4c45664a382019f3082019b300c0603551d130101ff04023000300e0603551d0f0101ff0404030204f0307d06092a864886f7636408050470306ea40302010abf893003020101bf893103020100bf893203020101bf893303020101bf89341e041c33594d36354d393534422e636f6d2e74657374616d656e742e617070a5060404736b7320bf893603020105bf893703020100bf893903020100bf893a03020100bf893b030201003081c606092a864886f7636408070481b83081b5bf8a7808040631382e332e32bf885003020102bf8a7b0704053232443832bf8a7c08040631382e332e32bf8a7d08040631382e332e32bf8a7e03020100bf8a7f03020100bf8b0003020100bf8b0103020100bf8b0203020100bf8b0303020100bf8b0403020101bf8b0503020100bf8b0a0f040d32322e342e38322e302e302c30bf8b0b0f040d32322e342e38322e302e302c30bf8b0c0f040d32322e342e38322e302e302c30bf88020a04086970686f6e656f73303306092a864886f76364080204263024a1220420e3ef0f3c114514e2bc2adb31a95a99a6be12875ad96074d952809c5a7b192467300a06082a8648ce3d040302036700306402302f91eb746af6fc89acf779c71d2bd53b4cadc2b75c3b465c125bf3c4572b9b3cf63f9834b3f8e35d2120fb9f4ea4f4220230394e4ab6fe8333f534c6d2a0f8ed4fa8dd9908ff6fb8ab18a2cdcf01a39909185af7b099199ddf520b9892307eb83046";

        certManager.verifyCert(intermediate_cert, certManager.ROOT_CA_CERT_HASH());
        certManager.verifyCert(leaf_cert, keccak256(intermediate_cert));

        bytes32 r = 0x44f4a2b756fa975aed6c882d5d59fe4e0b45063e97c9eba7043d290931392a5c;
        bytes32 s = 0x1287ea43ebc33f59c52f197e2ad8a2bcdb54dc25a1e48db600197625ca9bdb83;

        console.logBytes(certManager.certPubKey(keccak256(leaf_cert)));

        certManager.verifyP256SignedData(
            keccak256(leaf_cert), sha256(hex"3f1fc5d114238cc618ca7036cc2d0a28cdc14afacadebdc9cef1c818b633345f"), r, s
        );
    }
}
